// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
    id        Int      @id @default(autoincrement())
    username  String   @unique
    email     String   @unique
    chatsFrom Chat[]   @relation("chatsFrom")
    chatsTo   Chat[]   @relation("chatsTo")
    messages  Messages[]
}

model Chat {
    id        Int      @id @default(autoincrement())
    fromUser  Int      // Foreign key referencing User (sender)
    toUser    Int      // Foreign key referencing User (receiver)
    messages  Messages[]

    // Relations
    from      User     @relation("chatsFrom", fields: [fromUser], references: [id])
    to        User     @relation("chatsTo", fields: [toUser], references: [id])

    // Ensure a unique chat exists between a specific pair of users
    @@unique([fromUser, toUser], name: "uniqueChatPair")
}

model Messages {
    id        Int      @id @default(autoincrement())
    chatId    Int      // Foreign key to Chat
    senderId  Int      // Foreign key to User (sender)
    content   String   // The message content
    timestamp DateTime @default(now())

    // Relations
    chat      Chat     @relation(fields: [chatId], references: [id])
    sender    User     @relation(fields: [senderId], references: [id])
}
